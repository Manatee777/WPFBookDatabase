#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBooks
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="knizni_db")]
	public partial class book_linqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable(Table instance);
    partial void UpdateTable(Table instance);
    partial void DeleteTable(Table instance);
    #endregion
		
		public book_linqDataContext() : 
				base(global::MBooks.Properties.Settings.Default.knizni_dbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public book_linqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public book_linqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public book_linqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public book_linqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table> Tables
		{
			get
			{
				return this.GetTable<Table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Table]")]
	public partial class Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazev;
		
		private string _Zanr;
		
		private string _Autor;
		
		private string _Recenze;
		
		private System.Nullable<int> _Hodnocení;
		
		private string _Obrazek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazevChanging(string value);
    partial void OnNazevChanged();
    partial void OnZanrChanging(string value);
    partial void OnZanrChanged();
    partial void OnAutorChanging(string value);
    partial void OnAutorChanged();
    partial void OnRecenzeChanging(string value);
    partial void OnRecenzeChanged();
    partial void OnHodnoceníChanging(System.Nullable<int> value);
    partial void OnHodnoceníChanged();
    partial void OnObrazekChanging(string value);
    partial void OnObrazekChanged();
    #endregion
		
		public Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazev", DbType="NChar(10)")]
		public string Nazev
		{
			get
			{
				return this._Nazev;
			}
			set
			{
				if ((this._Nazev != value))
				{
					this.OnNazevChanging(value);
					this.SendPropertyChanging();
					this._Nazev = value;
					this.SendPropertyChanged("Nazev");
					this.OnNazevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zanr", DbType="NChar(10)")]
		public string Zanr
		{
			get
			{
				return this._Zanr;
			}
			set
			{
				if ((this._Zanr != value))
				{
					this.OnZanrChanging(value);
					this.SendPropertyChanging();
					this._Zanr = value;
					this.SendPropertyChanged("Zanr");
					this.OnZanrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="NChar(10)")]
		public string Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					this.OnAutorChanging(value);
					this.SendPropertyChanging();
					this._Autor = value;
					this.SendPropertyChanged("Autor");
					this.OnAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recenze", DbType="NChar(10)")]
		public string Recenze
		{
			get
			{
				return this._Recenze;
			}
			set
			{
				if ((this._Recenze != value))
				{
					this.OnRecenzeChanging(value);
					this.SendPropertyChanging();
					this._Recenze = value;
					this.SendPropertyChanged("Recenze");
					this.OnRecenzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hodnocení", DbType="Int")]
		public System.Nullable<int> Hodnocení
		{
			get
			{
				return this._Hodnocení;
			}
			set
			{
				if ((this._Hodnocení != value))
				{
					this.OnHodnoceníChanging(value);
					this.SendPropertyChanging();
					this._Hodnocení = value;
					this.SendPropertyChanged("Hodnocení");
					this.OnHodnoceníChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obrazek", DbType="NVarChar(50)")]
		public string Obrazek
		{
			get
			{
				return this._Obrazek;
			}
			set
			{
				if ((this._Obrazek != value))
				{
					this.OnObrazekChanging(value);
					this.SendPropertyChanging();
					this._Obrazek = value;
					this.SendPropertyChanged("Obrazek");
					this.OnObrazekChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
